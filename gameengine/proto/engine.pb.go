// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/engine.proto

package engine

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartNewGameRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartNewGameRequest) Reset()         { *m = StartNewGameRequest{} }
func (m *StartNewGameRequest) String() string { return proto.CompactTextString(m) }
func (*StartNewGameRequest) ProtoMessage()    {}
func (*StartNewGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{0}
}

func (m *StartNewGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartNewGameRequest.Unmarshal(m, b)
}
func (m *StartNewGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartNewGameRequest.Marshal(b, m, deterministic)
}
func (m *StartNewGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartNewGameRequest.Merge(m, src)
}
func (m *StartNewGameRequest) XXX_Size() int {
	return xxx_messageInfo_StartNewGameRequest.Size(m)
}
func (m *StartNewGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartNewGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartNewGameRequest proto.InternalMessageInfo

type StartNewGameResponse struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartNewGameResponse) Reset()         { *m = StartNewGameResponse{} }
func (m *StartNewGameResponse) String() string { return proto.CompactTextString(m) }
func (*StartNewGameResponse) ProtoMessage()    {}
func (*StartNewGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{1}
}

func (m *StartNewGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartNewGameResponse.Unmarshal(m, b)
}
func (m *StartNewGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartNewGameResponse.Marshal(b, m, deterministic)
}
func (m *StartNewGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartNewGameResponse.Merge(m, src)
}
func (m *StartNewGameResponse) XXX_Size() int {
	return xxx_messageInfo_StartNewGameResponse.Size(m)
}
func (m *StartNewGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartNewGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartNewGameResponse proto.InternalMessageInfo

func (m *StartNewGameResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type NewRoundRequest struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRoundRequest) Reset()         { *m = NewRoundRequest{} }
func (m *NewRoundRequest) String() string { return proto.CompactTextString(m) }
func (*NewRoundRequest) ProtoMessage()    {}
func (*NewRoundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{2}
}

func (m *NewRoundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoundRequest.Unmarshal(m, b)
}
func (m *NewRoundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoundRequest.Marshal(b, m, deterministic)
}
func (m *NewRoundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoundRequest.Merge(m, src)
}
func (m *NewRoundRequest) XXX_Size() int {
	return xxx_messageInfo_NewRoundRequest.Size(m)
}
func (m *NewRoundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoundRequest proto.InternalMessageInfo

func (m *NewRoundRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type NewRoundResponse struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRoundResponse) Reset()         { *m = NewRoundResponse{} }
func (m *NewRoundResponse) String() string { return proto.CompactTextString(m) }
func (*NewRoundResponse) ProtoMessage()    {}
func (*NewRoundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{3}
}

func (m *NewRoundResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoundResponse.Unmarshal(m, b)
}
func (m *NewRoundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoundResponse.Marshal(b, m, deterministic)
}
func (m *NewRoundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoundResponse.Merge(m, src)
}
func (m *NewRoundResponse) XXX_Size() int {
	return xxx_messageInfo_NewRoundResponse.Size(m)
}
func (m *NewRoundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoundResponse proto.InternalMessageInfo

func (m *NewRoundResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type MoveRequest struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Card                 string   `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{4}
}

func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (m *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(m, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *MoveRequest) GetCard() string {
	if m != nil {
		return m.Card
	}
	return ""
}

type MoveResponse struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveResponse) Reset()         { *m = MoveResponse{} }
func (m *MoveResponse) String() string { return proto.CompactTextString(m) }
func (*MoveResponse) ProtoMessage()    {}
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{5}
}

func (m *MoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveResponse.Unmarshal(m, b)
}
func (m *MoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveResponse.Marshal(b, m, deterministic)
}
func (m *MoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveResponse.Merge(m, src)
}
func (m *MoveResponse) XXX_Size() int {
	return xxx_messageInfo_MoveResponse.Size(m)
}
func (m *MoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveResponse proto.InternalMessageInfo

func (m *MoveResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func init() {
	proto.RegisterType((*StartNewGameRequest)(nil), "StartNewGameRequest")
	proto.RegisterType((*StartNewGameResponse)(nil), "StartNewGameResponse")
	proto.RegisterType((*NewRoundRequest)(nil), "NewRoundRequest")
	proto.RegisterType((*NewRoundResponse)(nil), "NewRoundResponse")
	proto.RegisterType((*MoveRequest)(nil), "MoveRequest")
	proto.RegisterType((*MoveResponse)(nil), "MoveResponse")
}

func init() { proto.RegisterFile("proto/engine.proto", fileDescriptor_dfae4ba294cbbcbf) }

var fileDescriptor_dfae4ba294cbbcbf = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xcd, 0x4b, 0xcf, 0xcc, 0x4b, 0xd5, 0x03, 0x73, 0x94, 0x44, 0xb9, 0x84, 0x83,
	0x4b, 0x12, 0x8b, 0x4a, 0xfc, 0x52, 0xcb, 0xdd, 0x13, 0x73, 0x53, 0x83, 0x52, 0x0b, 0x4b, 0x53,
	0x8b, 0x4b, 0x94, 0x4c, 0xb8, 0x44, 0x50, 0x85, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x64,
	0xb8, 0x38, 0x8b, 0x33, 0xd3, 0xf3, 0x12, 0x4b, 0x4a, 0x8b, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x10, 0x02, 0x4a, 0xfa, 0x5c, 0xfc, 0x7e, 0xa9, 0xe5, 0x41, 0xf9, 0xa5, 0x79, 0x29,
	0x50, 0x83, 0x08, 0x68, 0x30, 0xe0, 0x12, 0x40, 0x68, 0x20, 0xca, 0x0a, 0x7b, 0x2e, 0x6e, 0xdf,
	0xfc, 0xb2, 0x54, 0xa2, 0x8c, 0x17, 0x12, 0xe2, 0x62, 0x49, 0x4e, 0x2c, 0x4a, 0x91, 0x60, 0x02,
	0x4b, 0x80, 0xd9, 0x4a, 0x3a, 0x5c, 0x3c, 0x10, 0x03, 0x88, 0xb1, 0xce, 0x68, 0x3e, 0x23, 0x17,
	0x17, 0x28, 0x00, 0x5c, 0xc1, 0x61, 0x26, 0x64, 0xcd, 0xc5, 0x83, 0x1c, 0x2c, 0x42, 0x22, 0x7a,
	0x58, 0x02, 0x4f, 0x4a, 0x54, 0x0f, 0x6b, 0xd8, 0xe9, 0x73, 0x71, 0xc0, 0x3c, 0x2b, 0x24, 0xa0,
	0x87, 0x16, 0x50, 0x52, 0x82, 0x7a, 0x18, 0x21, 0xa1, 0xcc, 0xc5, 0x02, 0x72, 0xaa, 0x10, 0x8f,
	0x1e, 0x92, 0x97, 0xa5, 0x78, 0xf5, 0x90, 0xdd, 0x9f, 0xc4, 0x06, 0x8e, 0x47, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7d, 0x39, 0xb9, 0x29, 0xdd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameEngineClient is the client API for GameEngine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameEngineClient interface {
	StartNewGame(ctx context.Context, in *StartNewGameRequest, opts ...grpc.CallOption) (*StartNewGameResponse, error)
	NewRound(ctx context.Context, in *NewRoundRequest, opts ...grpc.CallOption) (*NewRoundResponse, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveResponse, error)
}

type gameEngineClient struct {
	cc *grpc.ClientConn
}

func NewGameEngineClient(cc *grpc.ClientConn) GameEngineClient {
	return &gameEngineClient{cc}
}

func (c *gameEngineClient) StartNewGame(ctx context.Context, in *StartNewGameRequest, opts ...grpc.CallOption) (*StartNewGameResponse, error) {
	out := new(StartNewGameResponse)
	err := c.cc.Invoke(ctx, "/GameEngine/StartNewGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameEngineClient) NewRound(ctx context.Context, in *NewRoundRequest, opts ...grpc.CallOption) (*NewRoundResponse, error) {
	out := new(NewRoundResponse)
	err := c.cc.Invoke(ctx, "/GameEngine/NewRound", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameEngineClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveResponse, error) {
	out := new(MoveResponse)
	err := c.cc.Invoke(ctx, "/GameEngine/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameEngineServer is the server API for GameEngine service.
type GameEngineServer interface {
	StartNewGame(context.Context, *StartNewGameRequest) (*StartNewGameResponse, error)
	NewRound(context.Context, *NewRoundRequest) (*NewRoundResponse, error)
	Move(context.Context, *MoveRequest) (*MoveResponse, error)
}

func RegisterGameEngineServer(s *grpc.Server, srv GameEngineServer) {
	s.RegisterService(&_GameEngine_serviceDesc, srv)
}

func _GameEngine_StartNewGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartNewGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameEngineServer).StartNewGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameEngine/StartNewGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameEngineServer).StartNewGame(ctx, req.(*StartNewGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameEngine_NewRound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRoundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameEngineServer).NewRound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameEngine/NewRound",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameEngineServer).NewRound(ctx, req.(*NewRoundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameEngine_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameEngineServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameEngine/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameEngineServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameEngine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GameEngine",
	HandlerType: (*GameEngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartNewGame",
			Handler:    _GameEngine_StartNewGame_Handler,
		},
		{
			MethodName: "NewRound",
			Handler:    _GameEngine_NewRound_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _GameEngine_Move_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/engine.proto",
}
